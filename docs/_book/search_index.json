[
["bases-de-dados.html", "2 Bases de dados 2.1 IBGE 2.2 IDH 2.3 SEADE 2.4 SNIS 2.5 Base completa", " 2 Bases de dados A seguir, documentamos o processo de extração de dados e contrução das bases. 2.1 IBGE Do portal Sidra, do IBGE, baixamos dados de saneamento básico, abastecimento de água, ocupação de domicílios e população total referentes ao Censo de 2010. 2.1.1 Saneamento Página: https://sidra.ibge.gov.br/tabela/1394 Código do município Nome do município Número de municípios permanentes ocupados servidos por fossa A partir do arquivo baixado (base_ibge_saneamento_original.xlsx), construímos a tabela ibge_saneamento_tidy. ibge_saneamento &lt;- readxl::read_excel( &quot;data-raw/base_ibge_saneamento_original.xlsx&quot;, skip = 7, col_names = c( &quot;nivel&quot;, &quot;munip_cod&quot;, &quot;munip_nome&quot;, &quot;condicao&quot;, &quot;variavel&quot;, &quot;valor&quot; ) ) %&gt;% filter(nivel != &quot;Fonte: IBGE - Censo Demográfico&quot; | is.na(nivel)) num_domicilios &lt;- ibge_saneamento$valor %&gt;% matrix(ncol = 8, byrow = TRUE) %&gt;% `colnames&lt;-`(c( &quot;domicilios_total&quot;, &quot;sanea_rede_esgoto&quot;, &quot;sanea_fossa_septica&quot;, &quot;sanea_fossa_rudimentar&quot;, &quot;sanea_vala&quot;, &quot;sanea_rio_lago_mar&quot;, &quot;sanea_outro&quot;, &quot;sanea_nao_tem&quot; )) %&gt;% as_tibble() %&gt;% mutate_all(list(as.numeric)) ibge_saneamento_tidy &lt;- ibge_saneamento %&gt;% select(munip_cod, munip_nome) %&gt;% filter(!is.na(munip_cod)) %&gt;% bind_cols(num_domicilios) %&gt;% filter(str_detect(munip_cod, &quot;^35&quot;)) %&gt;% mutate(munip_nome = str_remove(munip_nome, &quot; [(]SP[)]&quot;)) 2.1.2 Abastecimento Página: https://sidra.ibge.gov.br/tabela/3217 Código do município Nome do município Número de Municípios permanentes ocupados abastecidos por poço e mina, localizados na propriedade A partir do arquivo baixado (base_ibge_abastecimento_original.xlsx), construímos a tabela ibge_abastecimento_tidy. ibge_abastecimento &lt;- readxl::read_excel( &quot;data-raw/base_ibge_abastecimento_original.xlsx&quot;, skip = 5 ) %&gt;% janitor::clean_names() ibge_abastecimento_tidy &lt;- ibge_abastecimento %&gt;% select( munip_cod = x2, abast_rede_geral = rede_geral, abast_poco_na_propriedade = poco_ou_nascente_na_propriedade, abast_poco_fora_propriedade = poco_ou_nascente_fora_da_propriedade, abast_carro_pipa = carro_pipa, abast_chuva_cisterna = agua_da_chuva_armazenada_em_cisterna, abast_chuva_outro = agua_da_chuva_armazenada_de_outra_forma, abast_rio_lago_igarape = rio_acude_lago_ou_igarape, abst_poco_na_aldeia = poco_ou_nascente_na_aldeia, abst_poco_fora_aldeia = poco_ou_nascente_fora_da_aldeia ) %&gt;% mutate_at(vars(-munip_cod), list(as.numeric)) %&gt;% filter(str_detect(munip_cod, &quot;^35&quot;)) 2.1.3 População total Páginas: https://sidra.ibge.gov.br/tabela/200 Código do município Nome do município Número de municípios ocupados permanentes População Total A partir do arquivo baixado (base_ibge_pop_total.xlsx), construímos a tabela ibge_populacao_tidy. ibge_populacao &lt;- readxl::read_excel( &quot;data-raw/base_ibge_pop_total.xlsx&quot;, skip = 5 ) %&gt;% janitor::clean_names() ibge_populacao_tidy &lt;- ibge_populacao %&gt;% select( munip_cod = x1, pop_total = total ) %&gt;% filter(str_detect(munip_cod, &quot;^35&quot;)) 2.2 IDH Os dados para IDH de 2010 foram baixados do portal do Atla de Desenvolvimento humano no Brasil: http://www.atlasbrasil.org.br/2013/pt/download/. As seguintes variáveis foram extraídas para o ano de 2010: Código do município IDH IDHE (educação) IDHL (longevidade) IDHR (renda) A partir do arquivo baixado (base_idh_original.xlsx), construímos a tabela pnud_idh. idh &lt;- readxl::read_excel(&quot;data-raw/base_idh_original.xlsx&quot;, sheet = 2) %&gt;% janitor::clean_names() pnud_idh &lt;- pnud %&gt;% filter(ano == 2010, uf == 35) %&gt;% select( ano, munip_cod = codmun6, idh = idhm, idhm_e idhm_l idhm_r ) 2.3 SEADE O SEADE é o portal de estatísticas do Estado de São Paulo. É fundação vinculada à Secretaria de Governo, com o objetivo de produzir e disseminar análises e estatísticas socioeconômicas e demográficas. No portal https://produtos.seade.gov.br/produtos/projpop/, buscamos as bases com as seguintes variáveis: Código do município Ano Projeção População Total (anos 2011 a 2017) Projeção do número de domicílios permanentes ocupados (anos 2011 a 2017) A partir do arquivo baixado (base_pnud_original.xlsx), construímos a tabela pnud_tidy. seade &lt;- readr::read_delim( &quot;data-raw/base_seade_original.txt&quot;, delim = &quot;;&quot;, guess_max = 10000 ) %&gt;% filter(!is.na(mun_id), ano %in% 2011:2017) pop_total &lt;- seade %&gt;% select(starts_with(&quot;FM&quot;), starts_with(&quot;FH&quot;)) %&gt;% rowSums() seade_tidy &lt;- seade %&gt;% select(munip_cod = mun_id, ano = ano, proj_domicilios = DOM) %&gt;% mutate(proj_populacao = pop_total) 2.4 SNIS O Sistema Nacional de Informações Sobre Saneamento (SNIS) possui bases de dados com informações e indicadores sobre a prestação de serviços de Água e Esgotos, Manejo de Resíduos Sólidos Urbanos e Drenagem e Manejo das Águas Pluviais Urbanas. No portal http://app4.cidades.gov.br/serieHistorica/#, buscamos as bases com as seguintes variáveis: Código do prestador Nome do Prestador Natureza jurídica do prestador AG013 - quantidade de economias residenciais ativas de água AG002 - quantidade de ligações ativas de água AG004 - quantidade de ligações ativas de água micromedidas AG008 - volume de água micromedido AG010 - volume de água consumido AG012 - volume de água macromedido AG014 - quantidade de economias ativas micromedidas ES008 - quantidade de economias residenciais ativas de esgoto ES006 - volume de esgoto tratado FN001 - receita operacional direta total FN015 - despesas de exploração (DEX) FN002 - receita operacional direta de água AG011 - volume de água faturado AG018 - volume de água tratada importado AG019 - volume de água faturado exportado Nota: para ler a base, foi preciso abrir o arquivo .csv baixado do SNIS com o programa Numbers (iOS) e então exportar para Excel. A partir da base do original extraída do portal base_snis_original.xlsx, criamos a base tratada snis_tidy: snis &lt;- readxl::read_excel( &quot;data-raw/base_snis_original.xlsx&quot;, sheet = &quot;Sheet 1 - snis&quot;, skip = 1 ) snis &lt;- snis %&gt;% janitor::clean_names() %&gt;% filter(municipio != &quot;---&quot;, !is.na(municipio)) snis_tidy &lt;- snis %&gt;% select( munip_cod = codigo_do_municipio, ano = ano_de_referencia, prestador_cod = codigo_do_prestador, prestador_nome = prestador, prestador_sigla = sigla_do_prestador, prestador_nt_juridica = natureza_juridica, ind_ag013 = starts_with(&quot;ag013&quot;), ind_ag002 = starts_with(&quot;ag002&quot;), ind_ag004 = starts_with(&quot;ag004&quot;), ind_ag008 = starts_with(&quot;ag008&quot;), ind_ag010 = starts_with(&quot;ag010&quot;), ind_ag012 = starts_with(&quot;ag012&quot;), ind_ag014 = starts_with(&quot;ag014&quot;), ind_es008 = starts_with(&quot;es008&quot;), ind_es006 = starts_with(&quot;es006&quot;), ind_fn001 = starts_with(&quot;fn001&quot;), ind_fn015 = starts_with(&quot;fn015&quot;), ind_fn002 = starts_with(&quot;fn002&quot;), ind_ag011 = starts_with(&quot;ag011&quot;), ind_ag006 = starts_with(&quot;ag006&quot;), ind_ag018 = starts_with(&quot;ag018&quot;), ind_ag019 = starts_with(&quot;ag019&quot;) ) %&gt;% mutate_at( vars(starts_with(&quot;ind&quot;), ano), list(parse_number), locale = locale(decimal_mark = &quot;,&quot;, grouping_mark = &quot;.&quot;) ) 2.5 Base completa A base completa foi construída por meio da junção das bases tidy citadas acima. Essa base contempla as características de cada município para um determinado ano. library(tidyverse) ibge &lt;- readxl::read_excel(&quot;data/base_ibge_2010.xlsx&quot;) %&gt;% mutate( munip_cod = str_sub(munip_cod, 1, 6), ano = 2010 ) seade &lt;- readxl::read_excel(&quot;data/base_seade_proj_2011_2017.xlsx&quot;) %&gt;% mutate(munip_cod = str_sub(munip_cod, 1, 6)) pnud &lt;- readxl::read_excel(&quot;data/base_pnud_idh_2010.xlsx&quot;) %&gt;% mutate(munip_cod = as.character(munip_cod)) snis &lt;- readxl::read_excel(&quot;data/base_snis_saneamento_2010_2017.xlsx&quot;) base_censo &lt;- left_join(ibge, pnud, by = c(&quot;munip_cod&quot;, &quot;ano&quot;)) %&gt;% rename(num_domicilios = domicilios_total, populacao = pop_total) %&gt;% rename_at(vars(-munip_cod, -munip_nome, -ano), ~paste0(.x, &quot;_censo&quot;)) base_censo &lt;- map_dfr(2010:2017, ~mutate(base_censo, ano = .x)) base_completa &lt;- tibble( munip_cod = c(ibge$munip_cod, seade$munip_cod), ano = c(ibge$ano, seade$ano), num_domicilios = c(ibge$domicilios_total, seade$proj_domicilios), populacao = c(ibge$pop_total, seade$proj_populacao) ) %&gt;% left_join(base_censo, by = c(&quot;munip_cod&quot;, &quot;ano&quot;)) %&gt;% left_join(snis, by = c(&quot;munip_cod&quot;, &quot;ano&quot;)) write_rds(base_completa, &quot;data/base_completa.rds&quot;) A tabela a seguir apresenta as dez primeiras linhas da base completa: "]
]
